{{ config(
    materialized = 'incremental',
    incremental_strategy = 'microbatch',
    event_time = 'block_date',
    begin = '2024-01-01',
    batch_size = 'day',
    cluster_by = ['block_date::DATE','modified_timestamp::DATE'],
    tags = ['scheduled_core']
) }}

WITH pre_final AS (

    SELECT
        block_date,
        compute_success,
        total_fees,
        orig_status,
        compute_skipped,
        compute_gas_fees,
        action_result_code,
        destroyed,
        action_success,
        compute_msg_state_used,
        is_tock,
        account_state_hash_after,
        action_spec_actions,
        descr,
        account_state_balance_before,
        HASH,
        action_result_arg,
        aborted,
        mc_block_seqno,
        compute_account_activated,
        action_skipped_actions,
        now,
        credit_due_fees_collected,
        block_shard,
        end_status,
        credit_first,
        prev_trans_hash,
        block_workchain,
        account,
        compute_vm_steps,
        storage_fees_collected,
        compute_exit_arg,
        action_valid,
        action_status_change,
        installed,
        prev_trans_lt,
        compute_gas_credit,
        compute_gas_limit,
        skipped_reason,
        action_total_fwd_fees,
        account_state_code_hash_before,
        account_state_hash_before,
        compute_exit_code,
        trace_id,
        block_seqno,
        storage_status_change,
        lt,
        compute_mode,
        credit,
        storage_fees_due,
        compute_gas_used,
        account_state_code_hash_after,
        action_total_action_fees,
        compute_vm_init_state_hash,
        account_state_balance_after,
        action_tot_actions,
        compute_vm_final_state_hash,
        action_no_funds,
        _inserted_timestamp
    FROM
        {{ ref('bronze__transactions') }}
        {# qualify ROW_NUMBER() over (
        PARTITION BY seqno,
        shard,
        workchain
    ORDER BY
        _inserted_timestamp DESC
) = 1 #}
)
SELECT
    block_date,
    compute_success,
    total_fees,
    orig_status,
    compute_skipped,
    compute_gas_fees,
    action_result_code,
    destroyed,
    action_success,
    compute_msg_state_used,
    is_tock,
    account_state_hash_after,
    action_spec_actions,
    descr,
    account_state_balance_before,
    HASH,
    action_result_arg,
    aborted,
    mc_block_seqno,
    compute_account_activated,
    action_skipped_actions,
    now,
    credit_due_fees_collected,
    block_shard,
    end_status,
    credit_first,
    prev_trans_hash,
    block_workchain,
    account,
    compute_vm_steps,
    storage_fees_collected,
    compute_exit_arg,
    action_valid,
    action_status_change,
    installed,
    prev_trans_lt,
    compute_gas_credit,
    compute_gas_limit,
    skipped_reason,
    action_total_fwd_fees,
    account_state_code_hash_before,
    account_state_hash_before,
    compute_exit_code,
    trace_id,
    block_seqno,
    storage_status_change,
    lt,
    compute_mode,
    credit,
    storage_fees_due,
    compute_gas_used,
    account_state_code_hash_after,
    action_total_action_fees,
    compute_vm_init_state_hash,
    account_state_balance_after,
    action_tot_actions,
    compute_vm_final_state_hash,
    action_no_funds,
    _inserted_timestamp,
    {{ dbt_utils.generate_surrogate_key(
        ['hash']
    ) }} AS transactions_id,
    SYSDATE() AS inserted_timestamp,
    SYSDATE() AS modified_timestamp,
    '{{ invocation_id }}' AS _invocation_id
FROM
    pre_final
