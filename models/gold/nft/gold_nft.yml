
version: 2

models:
  - name: nft__fact_nft_events
    description: "Comprehensive data mart containing all NFT-related events including mints, transfers, sales, auctions, etc. Built on top of nft_items, nft_transfers, messages, and nft_sales tables."
    columns:
      - name: block_timestamp
        description: "Timestamp of the block when the NFT event occurred, converted from timestamp."
      - name: tx_hash
        description: "Transaction hash associated with the NFT event, if applicable."
      - name: type
        description: "Type of NFT event: 'mint' (NFT deployment), 'put_on_sale' (NFT listed for sale), 'cancel_sale' (sale canceled), 'sale' (NFT sold), 'transfer' (direct NFT transfer), or 'bid' (auction bid)."
      - name: sale_type
        description: "Type of the sale: 'sale' for fixed price sales or 'auction' for auctions with bids."
      - name: nft_item_address
        description: "Address of the NFT item involved in the event."
      - name: nft_item_index
        description: "Index of the NFT item within its collection."
      - name: payment_asset
        description: "Asset type used for payment. Currently only 'TON' is supported."
      - name: sale_price
        description: "Price of the NFT in a sale event."
      - name: forward_amount
        description: "Amount of TON forwarded in transfer message, if related to the event."
      - name: royalty_amount
        description: "Amount of royalty in a sale event."
      - name: marketplace_fee
        description: "Fee charged by the marketplace in a sale event."
      - name: auction_max_bid
        description: "Maximum bid allowed in an auction."
      - name: auction_min_bid
        description: "Minimum bid required in an auction."
      - name: sale_contract
        description: "Address of the sale contract if related to the event."
      - name: royalty_address
        description: "Address receiving the royalty payment."
      - name: marketplace_address
        description: "Address of the marketplace facilitating the sale."
      - name: marketplace_fee_address
        description: "Address receiving the marketplace fee."
      - name: owner_address
        description: "Current owner address of the NFT."
      - name: collection_address
        description: "Address of the NFT collection. May be null for standalone NFTs."
      - name: content_onchain
        description: "NFT metadata extracted from on-chain data in JSON format."
      - name: trace_id
        description: "Trace ID for the transaction if applicable."
      - name: query_id
        description: "Query ID associated with the event if it exists."
      - name: is_init
        description: "Boolean flag indicating if the NFT is initialized."
      - name: custom_payload
        description: "Custom payload from the transfer message if related to the event."
      - name: comment
        description: "Text comment extracted from forward_payload."
      - name: sale_end_time
        description: "End time of the sale if applicable."
      - name: forward_payload
        description: "Payload of the forward message from transfer message if related to the event."
      - name: auction_min_step
        description: "Minimum step for bids in an auction."
      - name: prev_owner
        description: "Previous owner address. For mint events, this is the deployer address. For transfers, it's the previous owner. For sales, it's the seller. For bids, it's the bidder. Null for put_on_sale and cancel_sale events."
      - name: timestamp
        description: "Unix timestamp of the NFT event."
      - name: lt
        description: "Logical time of the NFT event."
      - name: fact_nft_events_id
        description: "Unique identifier for the NFT event record."
      - name: inserted_timestamp
        description: "Timestamp when the record was inserted into the data warehouse."
      - name: modified_timestamp
        description: "Timestamp when the record was last modified in the data warehouse."
    tests:
      - dbt_utils.recency:
          datepart: hour
          field: block_timestamp
          interval: 30
          severity: error
          tags: ['test_recency']

  - name: nft__fact_nft_items
    description: "Contains full history of NFT item states according to TEP-62 NFT standard. Includes details about ownership and on-chain metadata."
    columns:
      - name: block_timestamp
        description: "Timestamp of the block when the NFT state was recorded, converted from timestamp."
      - name: address
        description: "Address of the NFT item."
      - name: index
        description: "Index of the NFT item within its collection."
      - name: collection_address
        description: "Address of the NFT collection. May be null for standalone NFTs."
      - name: owner_address
        description: "Current owner address of the NFT item."
      - name: content_onchain
        description: "NFT metadata extracted from on-chain data in JSON format."
      - name: is_init
        description: "Boolean flag indicating if the NFT is initialized."
      - name: lt
        description: "Logical time of the NFT state update."
      - name: timestamp
        description: "Unix timestamp of the NFT state update."
      - name: fact_nft_items_id
        description: "Unique identifier for the NFT item record."
      - name: inserted_timestamp
        description: "Timestamp when the record was inserted into the data warehouse."
      - name: modified_timestamp
        description: "Timestamp when the record was last modified in the data warehouse."
    tests:
      - dbt_utils.recency:
          datepart: hour
          field: block_timestamp
          interval: 30
          severity: error
          tags: ['test_recency']

  - name: nft__fact_nft_metadata
    description: "Contains NFT metadata for both items and collections, including on-chain and off-chain data according to TEP-64 standard."
    columns:
      - name: address
        description: "NFT item or collection address."
      - name: parent_address
        description: "Collection owner address if type is 'collection', otherwise collection address for the item."
      - name: update_timestamp_onchain
        description: "Timestamp of the last on-chain update, converted from update_time_onchain."
      - name: type
        description: "Type of NFT entity: 'item' for individual NFTs or 'collection' for NFT collections."
      - name: name
        description: "TEP-64 NFT name from on-chain, off-chain, or tonapi source."
      - name: description
        description: "TEP-64 NFT description from on-chain, off-chain, or tonapi source."
      - name: metadata_status
        description: "Off-chain metadata update status: 0 - no off-chain metadata, 1 - success, -1 - error."
      - name: attributes
        description: "TEP-64 NFT attributes from on-chain, off-chain, or tonapi source. Only available for NFT items, not collections."
      - name: image
        description: "TEP-64 NFT image URL from on-chain, off-chain, or tonapi source."
      - name: image_data
        description: "TEP-64 NFT image data from on-chain, off-chain, or tonapi source."
      - name: tonapi_image_url
        description: "Cached image URL from tonapi."
      - name: content_onchain
        description: "JSON serialized string with on-chain metadata content."
      - name: sources
        description: "Record with sources of NFT metadata fields (name, description, image, image_data, attributes). Values can be 'onchain', 'offchain', 'tonapi', or '' (not set)."
      - name: update_time_onchain
        description: "Unix timestamp of on-chain update, such as admin address transfer."
      - name: update_time_metadata
        description: "Unix timestamp of off-chain metadata update."
      - name: adding_at
        description: "Date when the output file was created."
      - name: fact_nft_metadata_id
        description: "Unique identifier for the NFT metadata record."
      - name: inserted_timestamp
        description: "Timestamp when the record was inserted into the data warehouse."
      - name: modified_timestamp
        description: "Timestamp when the record was last modified in the data warehouse."
    tests:
      - dbt_utils.recency:
          datepart: hour
          field: update_timestamp_onchain
          interval: 30
          severity: error
          tags: ['test_recency']

  - name: nft__fact_nft_sales
    description: "Contains history of NFT sales contracts, including both fixed-price sales and auctions."
    columns:
      - name: block_timestamp
        description: "Timestamp of the block when the NFT sale state was recorded, converted from timestamp."
      - name: address
        description: "Address of the NFT sales contract."
      - name: nft_address
        description: "Address of the NFT item being sold."
      - name: type
        description: "Type of sale: 'sale' for fixed price sales or 'auction' for auctions with bids."
      - name: asset
        description: "Asset type used for payment, currently only 'TON' is supported."
      - name: price
        description: "Price of the NFT or current bid for auction."
      - name: marketplace_fee
        description: "Fee amount charged by the marketplace."
      - name: royalty_amount
        description: "Amount of royalty to be paid to the royalty address."
      - name: nft_owner_address
        description: "Address of the NFT owner who created the sale."
      - name: marketplace_address
        description: "Address of the marketplace facilitating the sale."
      - name: marketplace_fee_address
        description: "Address receiving the marketplace fee."
      - name: royalty_address
        description: "Address receiving the royalty payment."
      - name: is_complete
        description: "Boolean flag indicating if the sale is complete."
      - name: is_canceled
        description: "Boolean flag indicating if the sale is canceled (only for auctions)."
      - name: min_bid
        description: "Minimum bid amount for an auction."
      - name: max_bid
        description: "Maximum bid amount for an auction."
      - name: min_step
        description: "Minimum step for bids in an auction."
      - name: end_time
        description: "Time of expiration of the sale."
      - name: last_bid_at
        description: "Timestamp of the last bid for an auction."
      - name: last_member
        description: "Address of the last bidder for an auction."
      - name: created_at
        description: "Timestamp of the NFT sales contract creation."
      - name: timestamp
        description: "Unix timestamp of the sale state update."
      - name: lt
        description: "Logical time of the sale state update."
      - name: fact_nft_sales_id
        description: "Unique identifier for the NFT sale record."
      - name: inserted_timestamp
        description: "Timestamp when the record was inserted into the data warehouse."
      - name: modified_timestamp
        description: "Timestamp when the record was last modified in the data warehouse."
    tests:
      - dbt_utils.recency:
          datepart: hour
          field: block_timestamp
          interval: 30
          severity: error
          tags: ['test_recency']

  - name: nft__fact_nft_transfers
    description: "Contains history of NFT transfers according to TEP-62 standard."
    columns:
      - name: block_timestamp
        description: "Timestamp of the block when the NFT transfer occurred, converted from tx_now."
      - name: tx_hash
        description: "Transaction hash of the transfer."
      - name: tx_succeeded
        description: "Boolean flag indicating if the transfer transaction succeeded. Set to FALSE if tx_aborted is TRUE."
      - name: tx_aborted
        description: "Boolean flag indicating if the transfer transaction was aborted."
      - name: old_owner
        description: "Address of the previous owner of the NFT."
      - name: new_owner
        description: "Address of the new owner of the NFT."
      - name: nft_collection_address
        description: "Address of the NFT collection. May be null for standalone NFTs."
      - name: nft_item_address
        description: "Address of the NFT item being transferred."
      - name: nft_item_index
        description: "Index of the NFT item within its collection."
      - name: response_destination
        description: "Destination address for the response message. See TEP-62 standard."
      - name: forward_amount
        description: "Amount of TON forwarded with the transfer message."
      - name: custom_payload
        description: "Custom payload included in the transfer message. See TEP-62 standard."
      - name: forward_payload
        description: "Payload of the forward message. See TEP-62 standard."
      - name: comment
        description: "Text comment extracted from forward_payload."
      - name: trace_id
        description: "Trace ID from the transaction."
      - name: query_id
        description: "Query ID of the transfer."
      - name: tx_now
        description: "Unix timestamp of the transaction block."
      - name: tx_lt
        description: "Logical time of the transaction."
      - name: fact_nft_transfers_id
        description: "Unique identifier for the NFT transfer record."
      - name: inserted_timestamp
        description: "Timestamp when the record was inserted into the data warehouse."
      - name: modified_timestamp
        description: "Timestamp when the record was last modified in the data warehouse."
    tests:
      - dbt_utils.recency:
          datepart: hour
          field: block_timestamp
          interval: 30
          severity: error
          tags: ['test_recency']
